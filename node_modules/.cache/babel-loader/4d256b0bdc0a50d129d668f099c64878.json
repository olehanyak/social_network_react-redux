{"ast":null,"code":"const store = {\n  __state: {\n    profilePage: {\n      posts: [{\n        id: 1,\n        message: \"hello\",\n        like: 12\n      }, {\n        id: 2,\n        message: \"I's my first post!\",\n        like: 5\n      }],\n      newPostText: \"New text\"\n    },\n    dialogsPage: {\n      dialogs: [{\n        id: 1,\n        name: \"Leo\"\n      }, {\n        id: 2,\n        name: \"Mark\"\n      }, {\n        id: 3,\n        name: \"Alf\"\n      }, {\n        id: 4,\n        name: \"Bean\"\n      }, {\n        id: 5,\n        name: \"Bill\"\n      }],\n      messages: [{\n        id: 1,\n        message: \"Yo\"\n      }, {\n        id: 2,\n        message: \"Hi\"\n      }, {\n        id: 3,\n        message: \"No way\"\n      }, {\n        id: 4,\n        message: \"No doubt\"\n      }, {\n        id: 5,\n        message: \"Wait for me!\"\n      }],\n      newMessageText: \"\"\n    }\n  },\n\n  renderReactTree() {\n    console.log('state changed');\n  },\n\n  addPosts() {\n    let newPost = {\n      id: 3,\n      message: this.state.profilePage.newPostText,\n      like: 0\n    };\n\n    this._state.profilePage.posts.push(newPost);\n\n    this._state.profilePage.newPostText = '';\n    this.renderReactTree(this._state);\n  },\n\n  updateNewText(newText) {\n    this._state.profilePage.newPostText = newText;\n    this.renderReactTree(this._state);\n  },\n\n  addMessage() {\n    let message = {\n      message: this._state.dialogsPage.newMessageText\n    };\n\n    this._state.dialogsPage.messages.push(message);\n\n    this._state.dialogsPage.newMessageText = '';\n    this.renderReactTree(this._state);\n  },\n\n  updateNewMessage(newMessage) {\n    this._state.dialogsPage.newMessageText = newMessage;\n    this.renderReactTree(this._state);\n  },\n\n  subscribe(observer) {\n    this.renderReactTree = observer;\n  }\n\n};\nexport default store;","map":{"version":3,"sources":["/home/oleh/Стільниця/social_netWork_react/network/src/redux/store.js"],"names":["store","__state","profilePage","posts","id","message","like","newPostText","dialogsPage","dialogs","name","messages","newMessageText","renderReactTree","console","log","addPosts","newPost","state","_state","push","updateNewText","newText","addMessage","updateNewMessage","newMessage","subscribe","observer"],"mappings":"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","sourcesContent":["\nconst store = {\n    __state: {\n        profilePage: {\n            posts: [\n                { id: 1, message: \"hello\", like: 12 },\n                { id: 2, message: \"I's my first post!\", like: 5 },\n            ],\n            newPostText: \"New text\",\n        },\n\n        dialogsPage: {\n            dialogs: [\n                { id: 1, name: \"Leo\" },\n                { id: 2, name: \"Mark\" },\n                { id: 3, name: \"Alf\" },\n                { id: 4, name: \"Bean\" },\n                { id: 5, name: \"Bill\" },\n            ],\n            messages: [\n                { id: 1, message: \"Yo\" },\n                { id: 2, message: \"Hi\" },\n                { id: 3, message: \"No way\" },\n                { id: 4, message: \"No doubt\" },\n                { id: 5, message: \"Wait for me!\" },\n            ],\n            newMessageText: \"\",\n        },\n\n    },\n\n    renderReactTree() {\n        console.log('state changed');\n    },\n\n    addPosts() {\n        let newPost = {\n            id: 3,\n            message: this.state.profilePage.newPostText,\n            like: 0,\n        };\n        this._state.profilePage.posts.push(newPost);\n        this._state.profilePage.newPostText = '';\n        this.renderReactTree(this._state);\n    },\n\n    updateNewText(newText) {\n        this._state.profilePage.newPostText = newText;\n        this.renderReactTree(this._state);\n    },\n\n    addMessage() {\n        let message = {\n            message: this._state.dialogsPage.newMessageText,\n        };\n        this._state.dialogsPage.messages.push(message);\n        this._state.dialogsPage.newMessageText = '';\n        this.renderReactTree(this._state);\n    },\n\n    updateNewMessage(newMessage) {\n        this._state.dialogsPage.newMessageText = newMessage;\n        this.renderReactTree(this._state);\n    },\n\n    subscribe(observer) {\n        this.renderReactTree = observer;\n    },\n\n};\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}