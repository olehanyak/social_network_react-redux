{"ast":null,"code":"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createNewMessage, updateNewMessage } from \"../../redux/actions/actions\";\nimport Dialogs from \"./Dialogs\";\n\nconst mapStateToProps = state => {\n  let {\n    dialogs,\n    messages,\n    newMessageText\n  } = state.dialogsPage;\n  return {\n    dialogs: dialogs,\n    messages: messages,\n    newMessageText: newMessageText\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createNewMessage: () => {\n      dispatch(createNewMessage());\n    },\n    updateNewMessage: text => {\n      dispatch(updateNewMessage(text));\n    }\n  };\n};\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\nexport default DialogsContainer;","map":{"version":3,"sources":["/home/oleh/Стільниця/social_netWork_react/network/src/components/Dialogs/DialogsContainer.jsx"],"names":["React","connect","createNewMessage","updateNewMessage","Dialogs","mapStateToProps","state","dialogs","messages","newMessageText","dialogsPage","mapDispatchToProps","dispatch","text","DialogsContainer"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,QAAmD,6BAAnD;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,MAAI;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,MAAwCH,KAAK,CAACI,WAAlD;AACA,SAAO;AACHH,IAAAA,OAAO,EAAEA,OADN;AAEHC,IAAAA,QAAQ,EAAEA,QAFP;AAGHC,IAAAA,cAAc,EAAEA;AAHb,GAAP;AAKH,CAPD;;AASA,MAAME,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHV,IAAAA,gBAAgB,EAAE,MAAM;AACpBU,MAAAA,QAAQ,CAACV,gBAAgB,EAAjB,CAAR;AACH,KAHE;AAIHC,IAAAA,gBAAgB,EAAGU,IAAD,IAAU;AACxBD,MAAAA,QAAQ,CAACT,gBAAgB,CAACU,IAAD,CAAjB,CAAR;AACH;AANE,GAAP;AAQH,CATD;;AAWA,MAAMC,gBAAgB,GAAGb,OAAO,CAACI,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CP,OAA7C,CAAzB;AAEA,eAAeU,gBAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createNewMessage, updateNewMessage } from \"../../redux/actions/actions\";\nimport Dialogs from \"./Dialogs\";\n\nconst mapStateToProps = (state) => {\n    let { dialogs, messages, newMessageText } = state.dialogsPage;\n    return {\n        dialogs: dialogs,\n        messages: messages,\n        newMessageText: newMessageText,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createNewMessage: () => {\n            dispatch(createNewMessage());\n        },\n        updateNewMessage: (text) => {\n            dispatch(updateNewMessage(text));\n        },\n    };\n};\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\n\nexport default DialogsContainer;\n"]},"metadata":{},"sourceType":"module"}