{"ast":null,"code":"import dialogsReducer from \"./reducers/dialogsReducer\";\nimport profileReducer from \"./reducers/profileReducer\";\nexport const ADD_POST = 'ADD_POST';\nexport const UPDATE_NEW_TEXT = 'UPDATE_NEW_TEXT';\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\nexport const UPDATE_NEW_MESSAGE = 'UPDATE_NEW_MESSAGE';\nconst store = {\n  _state: {\n    profilePage: {\n      posts: [{\n        id: 1,\n        message: \"hello\",\n        like: 12\n      }, {\n        id: 2,\n        message: \"I's my first post!\",\n        like: 5\n      }],\n      newPostText: \"\"\n    },\n    dialogsPage: {\n      dialogs: [{\n        id: 1,\n        name: \"Leo\"\n      }, {\n        id: 2,\n        name: \"Mark\"\n      }, {\n        id: 3,\n        name: \"Alf\"\n      }, {\n        id: 4,\n        name: \"Bean\"\n      }, {\n        id: 5,\n        name: \"Bill\"\n      }],\n      messages: [{\n        id: 1,\n        message: \"Yo\"\n      }, {\n        id: 2,\n        message: \"Hi\"\n      }, {\n        id: 3,\n        message: \"No way\"\n      }, {\n        id: 4,\n        message: \"No doubt\"\n      }, {\n        id: 5,\n        message: \"Wait for me!\"\n      }],\n      newMessageText: \"\"\n    }\n  },\n\n  _callSubscribe() {\n    console.log('state changed');\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(observer) {\n    this._callSubscribe = observer;\n  },\n\n  dispatch(action) {\n    this._state.profilePage = profileReducer(this._state.profilePage, action);\n    this._state.dialogsPage = dialogsReducer(this._state.dialogsPage, action);\n    this._callSubscribe = this._state;\n  }\n\n};\nexport default store;","map":{"version":3,"sources":["/home/oleh/Стільниця/social_netWork_react/network/src/redux/store.js"],"names":["dialogsReducer","profileReducer","ADD_POST","UPDATE_NEW_TEXT","ADD_MESSAGE","UPDATE_NEW_MESSAGE","store","_state","profilePage","posts","id","message","like","newPostText","dialogsPage","dialogs","name","messages","newMessageText","_callSubscribe","console","log","getState","subscribe","observer","dispatch","action"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,2BAA3B;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AAEA,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AAGP,MAAMC,KAAK,GAAG;AACVC,EAAAA,MAAM,EAAE;AACJC,IAAAA,WAAW,EAAE;AACTC,MAAAA,KAAK,EAAE,CACH;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE,OAAlB;AAA2BC,QAAAA,IAAI,EAAE;AAAjC,OADG,EAEH;AAAEF,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE,oBAAlB;AAAwCC,QAAAA,IAAI,EAAE;AAA9C,OAFG,CADE;AAKTC,MAAAA,WAAW,EAAE;AALJ,KADT;AASJC,IAAAA,WAAW,EAAE;AACTC,MAAAA,OAAO,EAAE,CACL;AAAEL,QAAAA,EAAE,EAAE,CAAN;AAASM,QAAAA,IAAI,EAAE;AAAf,OADK,EAEL;AAAEN,QAAAA,EAAE,EAAE,CAAN;AAASM,QAAAA,IAAI,EAAE;AAAf,OAFK,EAGL;AAAEN,QAAAA,EAAE,EAAE,CAAN;AAASM,QAAAA,IAAI,EAAE;AAAf,OAHK,EAIL;AAAEN,QAAAA,EAAE,EAAE,CAAN;AAASM,QAAAA,IAAI,EAAE;AAAf,OAJK,EAKL;AAAEN,QAAAA,EAAE,EAAE,CAAN;AAASM,QAAAA,IAAI,EAAE;AAAf,OALK,CADA;AAQTC,MAAAA,QAAQ,EAAE,CACN;AAAEP,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE;AAAlB,OADM,EAEN;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE;AAAlB,OAFM,EAGN;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE;AAAlB,OAHM,EAIN;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE;AAAlB,OAJM,EAKN;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE;AAAlB,OALM,CARD;AAeTO,MAAAA,cAAc,EAAE;AAfP;AATT,GADE;;AA6BVC,EAAAA,cAAc,GAAG;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH,GA/BS;;AAiCVC,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKf,MAAZ;AACH,GAnCS;;AAqCVgB,EAAAA,SAAS,CAACC,QAAD,EAAW;AAChB,SAAKL,cAAL,GAAsBK,QAAtB;AACH,GAvCS;;AAyCVC,EAAAA,QAAQ,CAACC,MAAD,EAAS;AACb,SAAKnB,MAAL,CAAYC,WAAZ,GAA0BP,cAAc,CAAC,KAAKM,MAAL,CAAYC,WAAb,EAA0BkB,MAA1B,CAAxC;AACA,SAAKnB,MAAL,CAAYO,WAAZ,GAA0Bd,cAAc,CAAC,KAAKO,MAAL,CAAYO,WAAb,EAA0BY,MAA1B,CAAxC;AAEA,SAAKP,cAAL,GAAsB,KAAKZ,MAA3B;AACH;;AA9CS,CAAd;AAoDA,eAAeD,KAAf","sourcesContent":["import dialogsReducer from \"./reducers/dialogsReducer\";\nimport profileReducer from \"./reducers/profileReducer\";\n\nexport const ADD_POST = 'ADD_POST';\nexport const UPDATE_NEW_TEXT = 'UPDATE_NEW_TEXT';\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\nexport const UPDATE_NEW_MESSAGE = 'UPDATE_NEW_MESSAGE';\n\n\nconst store = {\n    _state: {\n        profilePage: {\n            posts: [\n                { id: 1, message: \"hello\", like: 12 },\n                { id: 2, message: \"I's my first post!\", like: 5 },\n            ],\n            newPostText: \"\",\n        },\n\n        dialogsPage: {\n            dialogs: [\n                { id: 1, name: \"Leo\" },\n                { id: 2, name: \"Mark\" },\n                { id: 3, name: \"Alf\" },\n                { id: 4, name: \"Bean\" },\n                { id: 5, name: \"Bill\" },\n            ],\n            messages: [\n                { id: 1, message: \"Yo\" },\n                { id: 2, message: \"Hi\" },\n                { id: 3, message: \"No way\" },\n                { id: 4, message: \"No doubt\" },\n                { id: 5, message: \"Wait for me!\" },\n            ],\n            newMessageText: \"\",\n        },\n    },\n\n    _callSubscribe() {\n        console.log('state changed');\n    },\n\n    getState() {\n        return this._state;\n    },\n\n    subscribe(observer) {\n        this._callSubscribe = observer;\n    },\n\n    dispatch(action) {\n        this._state.profilePage = profileReducer(this._state.profilePage, action);\n        this._state.dialogsPage = dialogsReducer(this._state.dialogsPage, action);\n\n        this._callSubscribe = this._state;\n    }\n};\n\n\n\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}